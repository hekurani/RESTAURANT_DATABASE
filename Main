create database Restauranti;
use Restauranti;
create table Tavolina(
tid integer auto_increment, statusi nvarchar(15) not null 
,primary key(tid));

create table Stafi( sid integer auto_increment, Emri nvarchar(20) not null, Mbiemri nvarchar(20) not null,
Roli nvarchar(30) not null, Paga integer, Adresa nvarchar(50) , NumriITelefonit nvarchar(15), primary key(sid));

create table Konsumatoret(kid integer auto_increment,  Emri nvarchar(20) not null, Mbiemri nvarchar(20) not null,
Telefoni nvarchar(15), Adresa_Qyteti nvarchar(20), primary key(kid));

create table Rating(Konsumatori integer , Data_Vleresimit date, Vleresimi integer,primary key(Konsumatori,Data_Vleresimit),
foreign key(Konsumatori) references Konsumatoret(kid), check(Vleresimi>0 & Vleresimi<6));

create table Bookings(bid integer auto_increment, Data_Rezervimit date not null, Data_Per_KurEshte_Rezervuar date not null,
Punetori integer not null, Klienti integer not null, Tavolina integer not null, Anuluar nvarchar(5) not null, primary key(bid), 
foreign key(Punetori) references Stafi(sid), foreign key(Klienti) references Konsumatoret(kid),
foreign key(Tavolina) references Tavolina(tid));

ALTER TABLE Bookings AUTO_INCREMENT = 100;

create table Porosia( pid integer auto_increment, Tavolina integer not null, Kamarieri integer not null, 
Artikujt nvarchar(60) not null, Data_Porosise date, primary key(pid), foreign key(Tavolina) references Tavolina(tid),
foreign key (Kamarieri) references Stafi(sid) );

create table Menu(mid integer auto_increment, Kategoria nvarchar(20) not null, Pershkrimi nvarchar(100), Cmimi integer not null,
primary key(mid));

ALTER TABLE Menu ADD COLUMN Ushqimi nvarchar(20) AFTER  Kategoria;


INSERT INTO Menu (Kategoria, Ushqimi, Pershkrimi,Cmimi) VALUES
('Mëngjesi',	'Omelet',	'Omelet standarde me vezë dhe salcice',	2 ),
('Mëngjesi',	'Drithëra',	'Drithera thekre me mjaltë',	2 ),
('Mishërat',	'Kombinim',	'Kombinim i llojeve të mishrave, mish pule dhe vici',	6), 
('Mishërat',	'Tavë viqi',	'Tave me mish vici dhe perime të fërguara',	5 ),
('Picat',	'Pepperoni',	'Picë peperoni',	4), 
('Pastat',	'Spaghetti Bolognese',	'Spaghetti me sos Bolonjez', 	3.50), 
('Picat',	'Vegetarian',	'Pica me perime: domate, speca, rukolle',	4 ),
('Deserti',	'Bakllava',	'Bakllava tradicionale',	1.50 ),
('Picat',	'Margarita',	'Picë me vetëm djath cheddar',	3 ),
('Mishërat',	'Ramstek',	'Mish ramstek i pjekur në skarë',	7), 
('Pastat',	'Mac N Cheese',	'Makarona me sos djathi të shkrirë',	4.50 ),
('Mëngjesi',	'Petulla',	'Petulla amerikane me shurup boronice ',	2.50 ),
('Deserti',	'Akullore',	'Akullore e restaurantit: dredhëz, vanille, cokollatë',	1.80 );


INSERT INTO Porosia( Tavolina,Kamarieri,Artikujt,Data_Porosise) VALUES
(2,	12,	'Drithera, Pepperoni, Bakllava',	'2022-09-25'),
(11,	12,	'Kombinim, Ramstek, Akullore',	'2022-09-25'),
(9,	11,	'Pepperoni, Vegetarian, Margarita, Pepperoni',	'2022-09-30'),
(8,	14,	'Petulla, Omelet, Drithera'	,'2022-10-13'),
(13,	15,	'Tavë viqi, Mac N Cheese, Akullore',	'2022-10-20'),
(7,	16,	'Bakllava, Margarita, Petulla',	'2022-10-20'),
(6,	13,	'Pepperoni, Vegetarian, Spaghetti Bolognese',	'2022-10-30'),
(5,	13,	'Omelet, Omelet, Drithera',	'2022-11-07'),
(4,	12,	'Kombinim, Ramstek, Bakllava',	'2022-11-12'),
(2,	11,	'Petulla, Akullore, Drithera, Bakllava',	'2022-11-12'),
(9,	14,	'Pepperoni, Vegetarian, Margarita, Pepperoni',	'2022-11-15'),
(10,	15,	'Drithera',	'2022-11-28'),
(11,	16,	'Spaghetti Bolognese, Mac N Cheese',	'2022-12-05');


INSERT INTO Bookings(Data_Rezervimit,Data_Per_KurEshte_Rezervuar,Punetori,Klienti,Tavolina,Anuluar) values
('2022-09-21',	'2022-09-25',	11,	1,	2,	'Jo'),
('2022-09-23',	'2022-09-25',	2,	4,	11,	'Po'),
('2022-09-24',	'2022-09-30',	13,	5,	9,	'Jo'),
('2022-10-12',	'2022-10-13',	13,	8,	8,	'Po'),
('2022-10-17',	'2022-10-20',	1,	10,	13,	'Jo'),
('2022-10-18',	'2022-10-20',	12,	9,	7,	'Jo'),
('2022-10-24',	'2022-10-30',	12,	13,	6,	'Jo'),
('2022-10-30',	'2022-11-07',	8,	3,	5,	'Jo'),
('2022-11-02',	'2022-11-12',	9,	7,	4,	'Jo'),
('2022-11-06',	'2022-11-12',	15,	11,	2,	'Po'),
('2022-11-10',	'2022-11-15',	15,	12,	9,	'Po'),
('2022-11-12',	'2022-11-28',	1,	4,	10,	'Jo'),
('2022-11-16',	'2022-12-05',	2,	1,	11,	'Jo'),
('2023-01-01',	'2023-01-01',	2,	13,	11,	'Jo');

INSERT INTO Bookings(Data_Rezervimit,Data_Per_KurEshte_Rezervuar,Punetori,Klienti,Tavolina,Anuluar) VALUES
('2022-07-04',	'2022-07-05',	1,	1,	2,	'Jo'),
('2022-08-01',	'2022-08-02',	2,	4,	11,	'Po'),
('2022-07-11',	'2022-07-12',	8,	5,	9,	'Jo'),
('2022-07-05',	'2022-07-06',	9,	8,	8,	'Po'),
('2022-08-02',	'2022-08-03',	11,	10,	5,	'Jo'),
('2022-07-06',	'2022-07-07',	13,	13,	4,	'Po'),
('2022-08-03',	'2022-08-03',	15,	8,	10,	'Jo'),
('2022-08-10',	'2022-08-11',	1,	7,	1,	'Po'),
('2022-08-04',	'2022-08-05',	2,	12,	3,	'Jo'),
('2022-07-09',	'2022-07-09',	8,	4,	9,	'Po'),
('2022-07-16',	'2022-07-16',	9,	2,	12,	'Jo'),
('2022-07-23',	'2022-07-24',	11,	6,	5,	'Po'),
('2022-08-05',	'2022-08-06',	13,	5,	3,	'Jo'),
('2022-08-06',	'2022-08-07',	15,	1,	9,	'Po'),
('2022-08-13',	'2022-08-14',	1,	4,	7,	'Po'),
('2022-11-13',	'2022-11-17',	2,	8,	4,	'Jo');



INSERT INTO Rating(Konsumatori,Data_Vleresimit,Vleresimi) VALUES
(1,	'2022-09-25',	5),
(3,	'2022-11-07',	3),
(4,	'2022-09-25',	4),
(7,	'2022-11-12',	5),
(7,	'2022-11-15',	3),
(8,	'2022-10-13',	2),
(10,'2022-10-20',	4),
(11,'2022-11-12',	1),
(5,	'2022-09-30',	1),
(2,	'2022-11-28',	3),
(1,	'2022-09-30',	5),
(13,'2022-10-30',	4),
(12,'2022-11-15',	4);



INSERT INTO Konsumatoret(Emri,Mbiemri,Telefoni,Adresa_Qyteti) VALUES
('Art',	'Krasniqi',	'044/163/572',	'Prishtine'),
('Bujar',	'Gashi',	'045/718/234',	'Peje'),
('Gent',	'Morina',	'049/916/761',	'Prizren'),
('Nora', 	'Sejdiu',	'044/101/010',	'Prishtine'),
('Agon', 	'Fehmiu',	'044/234/522',	'Ferizaj'),
('Petrit',	'Qelaj',	'043/219/913',	'Mitrovice'),
('Sara',	'Kabashi',	'049/691/167',	'Gjilan'),
('Festim',	'Arifi',	'044/111/342',	'Gjakove'),
('Endrit',	'Syla',	'043/456/391',	'Vushtrri'),
('Lisa',	'Dedinca',	'045/515/276', 	'Prishtine'),
('Antigona',	'Hoxhaj',	'044/233/600',	'Suhareke'),
('Arianit',	'Mazrekaj',	'044/723/722',	'Istog'),
('Kujtim',	'Kryeziu',	'043/398/310',	'Peje');





INSERT INTO Stafi(Emri,Mbiemri,Roli,Paga,Adresa,NumriITelefonit) VALUES 
('Arsim',	'Isufi',	'Menaxher',	700	,'Rr.Abdyl Frashëri Nr.45',	'049/778/334'),
('Dardan',	'Bytyqi',	'Menaxher',	700	,'Rr.Demokracia Nr.15',	'044/332/146'),
('Elena',	'Krasniqi',	'Krye-Kuzhiniere',	650	,'Rr.Fehmi Agani Nr.137',	'044/179/312'),
('Etnik',	'Gashi',	'Krye-Kuzhinier',	600	,'Rr.Agim Ramadani Nr.86',	'049/458/221'),
('Besnik',	'Bislimi',	'Kuzhinier',	600	,'Rr.Bill Clinton Nr.56',	'049/384/574'),
('Haxhie',	'Dacaj',	'Kuzhiniere',	600	,'Rr.Bedri Pejani Nr.44',	'045/962/135'),
('Festim',	'Avdiu',	'Kuzhinier',	600	,'Rr.Bingen Nr.33',	'044/554/724'),
('Endrit', 	'Kastrati',	'Kuzhinier',	600	,'Rr.Haxhi Zeka Nr.36',	'044/722/898'),
('Diona',	'Nuriu',	'Ndihmese-Kuzhiniere',	500	,'Rr.Lidhja e Pejes Nr.69',	'044/225/782'),
('Nora',	'Vejsiu',	'Ndihmese-Kuzhiniere',	500	,'Rr.Pjeter Bogdani Nr.53',	'049/452/133'),
('Altin',	'Morina',	'Kamarier',	400	,'Rr.Remzi Ademi Nr.77',	'044/651/134'),
('Petrit',	'Hoxha',	'Kamarier',	400	,'Rr.Shkodra Nr.31',	'049/778/342'),
('Zane',	'Hasani',	'Kamariere',	400	,'Rr.Tomorri Nr.89',	'044/114/322'),
('Krenar', 	'Spahiu',	'Kamarier',	400	,'Rr.Ymer Prizreni Nr.62',	'044/834/244'),
('Kaltrina',	'Agolli',	'Kamariere',	400	,'Rr.Gjergj Fishta Nr.22',	'049/556/434'),
('Bujar',	'Arifi',	'Kamarier',	400	,'Rr.Zahir Pajaziti',	'049/439/022');


INSERT INTO Tavolina(statusi) VALUES
('Jo e lirë'),
('Jo e lirë'),
	('E lirë'),
	('Jo e lirë'),
	('E lirë'),
	('E lirë'),
	('Jo e lirë'),
	('E lirë'),
	('E lirë'),
	('E lirë'),
	('Jo e lirë'),
	('E lirë'),
	('Jo e lirë'),
	('Jo e lirë')
;

#Query 1- Listoni Konsumatoret nga qyteti i Prishtines
SELECT k.emri,k.mbiemri FROM Konsumatoret k WHERE Adresa_Qyteti='Prishtine';

#Query 2- Cilët konsumatorë (Emrin dhe Mbiemrin e tyre) kanë rezervuar te pakten dy here gjate vitit 2022?
SELECT k.emri,k.mbiemri FROM Konsumatoret k WHERE k.kid in (SELECT b.Klienti from bookings b group by(b.Klienti) HAVING (count(b.Klienti)>1)) ; 


#Query 3- Listoni konsumatoret te cilet e kane anuluar rezervimin e tyre te pakten nje here gjate vitit 2021 ose 2022.
SELECT k.Emri,k.mbiemri FROM Konsumatoret k WHERE k.kid IN (SELECT b1.Klienti FROM bookings b1 WHERE anuluar='Po' AND  Data_Rezervimit>='2021-01-01' 
AND Data_Per_KurEshte_Rezervuar <= '2022-12-31');

#Query 4- Listoni stafin që kanë pagën mbi 500 euro (emer, mbiemer) ose konsumatoret qe kane rezevuar me daten 01/01/2023 (emer, mbiemer)
(SELECT s.emri,s.mbiemri FROM Stafi s WHERE paga>500) UNION (SELECT k.emri,k.mbiemri FROM Konsumatoret k WHERE k.kid 
IN (SELECT b.Klienti FROM bookings b WHERE Data_Rezervimit = '2023-01-01')); 

#Query 5-5. Listoni top 5 porosite me numrin me te madh të artikujve në 3 muajt e fundit. Lista të paraqes të dhënat e konsumatorit qe ka 
# bere porosine duke përfshirë emrin e mbiemrin, numrin e produkteve ne porosi dhe kamarierin qe i ka sherbyer.
SELECT R3.EmriKlientit, R3.MbiemriKlientit,R3.Artikujt, R3.Nr_Artikujve, s.emri as EmriKamarierit, s.mbiemri as MbiemriKamarierit from stafi s
INNER JOIN 
(SELECT k.emri as EmriKlientit ,k.mbiemri as MbiemriKlientit ,
R2.Artikujt,R2.Nr_Artikujve, R2.Kamarieri FROM konsumatoret k INNER JOIN
(SELECT b.Klienti, R1.Artikujt,R1.Nr_Artikujve,R1.Kamarieri FROM bookings b INNER JOIN 
(SELECT p.Artikujt,p.Data_Porosise,p.Kamarieri,p.Tavolina,(LENGTH(p.Artikujt) - LENGTH(replace(p.artikujt,',','')) + 1) as Nr_Artikujve
 FROM Porosia p  WHERE(p.Data_Porosise>'2022-09-05' AND p.Data_Porosise<'2022-12-15')
ORDER BY (LENGTH(p.Artikujt) - LENGTH(replace(p.artikujt,',','')) + 1) DESC LIMIT 5) AS R1 
ON (b.Tavolina=R1.Tavolina AND b.Data_Per_KurEshte_Rezervuar=R1.Data_Porosise)) AS R2 ON
k.kid=R2.Klienti) as R3 ON s.sid=R3.Kamarieri;




#Query6-. Gjeni shumen e fituar nga te gjitha porosite, te ndare ne muaj Tetor,Nentor,Dhjetor (te vitit 2022). Rezultati duhet te jete nje 
#tabele te ka fushat Viti, Muaji, Shuma. (Tip: Porosia ka artikuj, artikujt e kane cmimin te menyja)
create table Shuma(
Muaji tinyint,
viti int,
Shuma int
);
insert into shuma
select month(data_porosise),year(data_porosise),sum(cmimi*(length(replace(Artikujt,Ushqimi,' '))-length(replace(Artikujt,Ushqimi,'')))) from Menu inner join Porosia On Locate(Menu.Ushqimi,porosia.artikujt) where year(data_porosise)=2022 and month(data_porosise) =10;
insert into Shuma
select month(data_porosise),year(data_porosise),sum(cmimi*(length(replace(Artikujt,Ushqimi,' '))-length(replace(Artikujt,Ushqimi,'')))) from Menu inner join Porosia On Locate(Menu.Ushqimi,porosia.artikujt) where year(data_porosise)=2022 and month(data_porosise) = 11;
insert into Shuma
select month(data_porosise),year(data_porosise),sum(cmimi*(length(replace(Artikujt,Ushqimi,' '))-length(replace(Artikujt,Ushqimi,'')))) from Menu inner join Porosia On Locate(Menu.Ushqimi,porosia.artikujt) where year(data_porosise)=2022 and month(data_porosise)= 12;
#ekzekutojme komanden poshte per te pare te dhenat qe na duhen
Select * from shuma;





#query 7-7. Gjeni mesataren e rezervimeve (booking) per secilen dite te javes  gjate muajve Korrik dhe Gusht.
# Rezultati duhet te permbaje:  Diten (e hene, e marte,....)  Numri mesatar i rezervimeve ne periudhen e cekur  Tip: Tek tabela rezervimi e keni daten, nga aty me ndonje 
# funksion te mysql e merrni muajin ose vetem diten

select avg(R1.K1) as 'E hene', avg(R2.K2) AS 'E marte', avg(R3.K3) AS 'E merkure', avg(R4.K4) AS 'E enjte', avg(R5.K5) AS 'E premte', avg(R6.K6) AS 'E shtune', avg(R7.K7) AS 'E diel'
 from (select count(b1.Data_Rezervimit) as 'K1' from bookings b1 WHERE dayofweek(Data_Rezervimit) in(2)
 and month(Data_Rezervimit) in (7) union select count(b2.Data_Rezervimit) from bookings b2 WHERE dayofweek(Data_Rezervimit) in(2)
 and month(Data_Rezervimit) in (8)) as R1,(select count(b1.Data_Rezervimit) as 'K2' from bookings b1 WHERE dayofweek(Data_Rezervimit) in(3)
 and month(Data_Rezervimit) in (7) union select count(b2.Data_Rezervimit) from bookings b2 WHERE dayofweek(Data_Rezervimit) in(3)
 and month(Data_Rezervimit) in (8)) as R2 ,(select count(b1.Data_Rezervimit) as 'K3' from bookings b1 WHERE dayofweek(Data_Rezervimit) in(4)
 and month(Data_Rezervimit) in (7) union select count(b2.Data_Rezervimit) from bookings b2 WHERE dayofweek(Data_Rezervimit) in(4)
 and month(Data_Rezervimit) in (8)) as R3,(select count(b1.Data_Rezervimit) as 'K4' from bookings b1 WHERE dayofweek(Data_Rezervimit) in(5)
 and month(Data_Rezervimit) in (7) union select count(b2.Data_Rezervimit) from bookings b2 WHERE dayofweek(Data_Rezervimit) in(5)
 and month(Data_Rezervimit) in (8)) as R4 ,(select count(b1.Data_Rezervimit) as 'K5' from bookings b1 WHERE dayofweek(Data_Rezervimit) in(6)
 and month(Data_Rezervimit) in (7) union select count(b2.Data_Rezervimit) from bookings b2 WHERE dayofweek(Data_Rezervimit) in(6)
 and month(Data_Rezervimit) in (8)) as R5 ,(select count(b1.Data_Rezervimit) as 'K6' from bookings b1 WHERE dayofweek(Data_Rezervimit) in(7)
 and month(Data_Rezervimit) in (7) union select count(b2.Data_Rezervimit) from bookings b2 WHERE dayofweek(Data_Rezervimit) in(7)
 and month(Data_Rezervimit) in (8)) as R6, (select count(b1.Data_Rezervimit) as 'K7' from bookings b1 WHERE dayofweek(Data_Rezervimit) in(1)
 and month(Data_Rezervimit) in (7) union select count(b2.Data_Rezervimit) from bookings b2 WHERE dayofweek(Data_Rezervimit) in(1)
 and month(Data_Rezervimit) in (8)) as R7    ;



#Query 8
Select Menu.Ushqimi as FavoriteFood from Menu join Porosia On Locate(Menu.Ushqimi,porosia.artikujt) where year(data_porosise)=2022
 and (length(replace(Artikujt,Ushqimi,' '))-length(replace(Artikujt,Ushqimi,'')))=(select max((length(replace(Artikujt,Ushqimi,' '))-length(replace(Artikujt,Ushqimi,'')))) 
from Menu join porosia On Locate(Menu.Ushqimi,porosia.artikujt) where year(data_porosise)=2022) ;

#Query8-forma2
Select Ushqimi as FavoriteFood  from Menu inner join Porosia On Locate(Menu.ushqimi,porosia.artikujt)  where year(Data_Porosise)=2022  group by ushqimi
 order by sum(length(replace(Artikujt,Ushqimi,' '))-length(replace(Artikujt,Ushqimi,''))) desc limit 1;

#Query9
SELECT porosia.Artikujt, porosia.Data_Porosise  FROM Menu inner join porosia On Locate(Menu.Ushqimi,porosia.artikujt) where menu.kategoria='Picat' 
GROUP BY porosia.artikujt,Porosia.pid HAVING Count(Porosia.pid) >= 3;
